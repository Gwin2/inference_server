#################
# GENERAL
#################
# split params with ' && '
# template like 'path_to model && path_to_config_file && path_to_example_package && path_to_result_package && type_model
#             && build_model_function && prepare_data_function && inference_function && post_processing_function && result_mapping'
#################
# 2.4
#################
HACK='000000000000000024b862dc317c75cb'
PATH_TO_NN=../NN/
SRC_RESULT=../result/
SRC_EXAMPLE=${PATH_TO_NN}example/

NN_1='${PATH_TO_NN}resnet18_1.pth && ${PATH_TO_NN}config_resnet18.yaml && ${SRC_EXAMPLE} && ${SRC_RESULT} && Resnet18_1 && build_func_resnet18 && pre_func_resnet18 && inference_func_resnet18 && post_func_resnet18 && {drone, noise, wifi}'

NN_2='${PATH_TO_NN}resnet18_2.pth && ${PATH_TO_NN}config_resnet18.yaml && ${SRC_EXAMPLE} && ${SRC_RESULT} && Resnet18_2 && build_func_resnet18 && pre_func_resnet18 && inference_func_resnet18 && post_func_resnet18 && {drone, noise, wifi}'

NN_3='${PATH_TO_NN}resnet50_1.pth && ${PATH_TO_NN}config_resnet50.yaml && ${SRC_EXAMPLE} && ${SRC_RESULT} && Resnet50 && build_func_resnet50 && pre_func_resnet50 && inference_func_resnet50 && post_func_resnet50 && {drone, noise, wifi}'

NN_4='${PATH_TO_NN}resnet18_3.pth && ${PATH_TO_NN}config_resnet18.yaml && ${SRC_EXAMPLE} && ${SRC_RESULT} && Resnet18_3 && build_func_resnet18 && pre_func_resnet18 && inference_func_resnet18 && post_func_resnet18 && {drone, noise, wifi}'

NN_5='${PATH_TO_NN}resnet18_4.pth && ${PATH_TO_NN}config_resnet18.yaml && ${SRC_EXAMPLE} && ${SRC_RESULT} && Resnet18_4 && build_func_resnet18 && pre_func_resnet18 && inference_func_resnet18 && post_func_resnet18 && {drone, noise, wifi}'

NN_6='${PATH_TO_NN}resnet18_5.pth && ${PATH_TO_NN}config_resnet18.yaml && ${SRC_EXAMPLE} && ${SRC_RESULT} && Resnet18_5 && build_func_resnet18 && pre_func_resnet18 && inference_func_resnet18 && post_func_resnet18 && {drone, noise, wifi}'

NUM_TOKEN=100
#################

#################
# Inference server
#################
SERVER_IP=192.168.1.100
SERVER_PORT=8080